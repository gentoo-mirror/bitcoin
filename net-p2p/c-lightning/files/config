## Bitcoin control options

# Select the network parameters (bitcoin, testnet, or regtest).
#network=NETWORK

# The name of bitcoin-cli executable to run.
#bitcoin-cli=PATH

# -datadir argument to supply to bitcoin-cli(1).
#bitcoin-datadir=DIR
bitcoin-datadir=/var/lib/bitcoind

# The RPC username for talking to bitcoind(1).
#bitcoin-rpcuser=USER

# The RPC password for talking to bitcoind(1).
#bitcoin-rpcpassword=PASSWORD

# The bitcoind(1) RPC host to connect to.
#bitcoin-rpcconnect=HOST

# The bitcoind(1) RPC port to connect to.
#bitcoin-rpcport=PORT

# Number of blocks to rescan from the current head, or absolute blockheight if
# negative. This is only needed if something goes badly wrong.
#rescan=BLOCKS


## Lightning daemon options

# Sets the working directory. All files (except --conf on the command line)
# are relative to this.
#lightning-dir=DIR

# Specify pid file to write to.
#pid-file=PATH

# What log level to print out: options are io, debug, info, unusual, broken.
#log-level=LEVEL

# Prefix for log lines: this can be customized if you want to merge logs with
# multiple daemons.
#log-prefix=PREFIX

# Log to this file instead of stdout. Sending lightningd(1) SIGHUP will cause
# it to reopen this file (useful for log rotation).
#log-file=PATH

# Set JSON-RPC socket (or /dev/tty), such as for lightning-cli(1).
#rpc-file=PATH


## Lightning node customization options

# Your favorite color as a hex code.
#rgb=RRGGBB

# Up to 32 UTF-8 characters to tag your node. Completely silly, since anyone
# can call their node anything they want. The default is an NSA-style codename
# derived from your public key, but "Peter Todd" and "VAULTERO" are good
# options, too.
#alias=NAME

# The base fee to charge for every payment which passes through. Note that
# millisatoshis are a very, very small unit! Default: 1000.
#fee-base=MILLISATOSHI

# This is the proportional fee to charge for every payment which passes
# through. As percentages are too coarse, it’s in millionths, so 10000 is 1%,
# 1000 is 0.1%. Default: 10 (0.001%).
#fee-per-satoshi=MILLIONTHS

# This value defines the minimal effective channel capacity in satoshi to
# accept for channel opening requests. If a peer tries to open a channel
# smaller than this, the opening will be rejected. Default: 10000.
#min-capacity-sat=SATOSHI

# Allow nodes which establish channels to us to set any fee they want. This may
# result in a channel which cannot be closed, should fees increase, but make
# channels far more reliable since we never close it due to unreasonable fees.
#ignore-fee-limits=BOOL

# How long to wait before sending commitment messages to the peer: in theory
# increasing this would reduce load, but your node would have to be extremely
# busy node for you to even notice.
#commit-time=MILLISECONDS


## Lightning channel and HTLC options

# How long we need to spot an outdated close attempt: on opening a channel we
# tell our peer that this is how long they’ll have to wait if they perform a
# unilateral close.
#watchtime-blocks=BLOCKS

# The longest our funds can be delayed (ie. the longest watchtime-blocks our
# peer can ask for, and also the longest HTLC timeout we will accept). If our
# peer asks for longer, we’ll refuse to create a channel, and if an HTLC asks
# for longer, we’ll refuse it.
#max-locktime-blocks=BLOCKS

# Confirmations required for the funding transaction when the other side opens
# a channel before the channel is usable.
#funding-confirms=BLOCKS

# The percentage of estimatesmartfee 2 to use for the bitcoin transaction which
# funds a channel: can be greater than 100.
#commit-fee=PERCENT

# Limits on what onchain fee range we’ll allow when a node opens a channel with
# us, as a percentage of estimatesmartfee 2. If they’re outside this range, we
# abort their opening attempt. Note that commit-fee-max can (should!) be
# greater than 100.
#commit-fee-min=PERCENT
#commit-fee-max=PERCENT

# Number of HTLCs one channel can handle concurrently in each direction. Should
# be between 1 and 483. Default: 30.
#max-concurrent-htlcs=INTEGER

# The number of blocks between incoming payments and outgoing payments: this
# needs to be enough to make sure that if we have to, we can close the outgoing
# payment before the incoming, or redeem the incoming once the outgoing is
# redeemed.
#cltv-delta=BLOCKS

# The number of blocks to allow for payments we receive: if we have to, we
# might need to redeem this on-chain, so this is the number of blocks we have
# to do that.
#cltv-final=BLOCKS


## Invoice control options

# Perform cleanup of expired invoices every SECONDS seconds, or disable if 0.
# Usually unpaid expired invoices are uninteresting, and just take up space in
# the database.
#autocleaninvoice-cycle=SECONDS

# Control how long invoices must have been expired before they are cleaned (if
# autocleaninvoice-cycle is non-zero).
#autocleaninvoice-expired-by=SECONDS


## Networking options

# Set an IP address (v4 or v6) or automatic Tor address to listen on and
# (maybe) announce as our node address.
#addr=[IPADDRESS[:PORT]]|autotor:TORIPADDRESS[:TORPORT]

# Set an IP address or UNIX domain socket to listen to, but do not announce. A
# UNIX domain socket is distinguished from an IP address by beginning with a /.
#bind-addr=[IPADDRESS[:PORT]]|SOCKETPATH

# Set an IP (v4 or v6) address or Tor address to announce; a Tor address is
# distinguished by ending in .onion.  PORT defaults to 9735.
#announce-addr=IPADDRESS[:PORT]|TORADDRESS.onion[:PORT]

# Do not bind to any ports, and do not try to reconnect to any peers. This can
# be useful for maintenance and forensics, so is usually specified on the
# command line. Overrides all addr and bind-addr options.
#offline

# By default, we bind (and maybe announce) on IPv4 and IPv6 interfaces if no
# addr, bind-addr or announce-addr options are specified. Setting this to false
# disables that.
#autolisten=BOOL

# Set a socks proxy to use to connect to Tor nodes (or for all connections if
# always-use-proxy is set).
#proxy=IPADDRESS[:PORT]

# Always use the proxy, even to connect to normal IP addresses (you can still
# connect to Unix domain sockets manually). This also disables all DNS lookups,
# to avoid leaking information.
#always-use-proxy=BOOL

# Disable the DNS bootstrapping mechanism to find a node by its node ID.
#disable-dns

# Set a Tor control password, which may be needed for autotor: to authenticate
# to the Tor control port.
#tor-service-password=PASSWORD


## Lightning plugins

# Specify a plugin to run as part of c-lightning. This can be specified
# multiple times to add multiple plugins.
#plugin=PATH

# Specify a directory to look for plugins; all files beginning with lplugin_ in
# DIRECTORY are loaded.  DIRECTORY must exist; this can be specified multiple
# times to add multiple directories.
#plugin-dir=DIRECTORY

# This option clears all plugin and plugin-dir options preceeding it, including
# the default built-in plugin directory. You can still add plugin-dir and
# plugin options following this and they will have the normal effect.
#clear-plugins

# If PLUGIN contains a /, plugins with the same path as PLUGIN are disabled.
# Otherwise, any plugin with that base name is disabled, whatever directory it
# is in.
#disable-plugin=PLUGIN
