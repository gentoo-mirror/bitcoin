diff -Naur a/configure.ac b/configure.ac
--- a/configure.ac	2022-02-09 04:27:18.879052050 +0000
+++ b/configure.ac	2022-02-09 04:39:37.840034923 +0000
@@ -1324,6 +1324,13 @@
 )
 if test x$system_libsecp256k1 != xno; then
   PKG_CHECK_MODULES([libsecp256k1],[libsecp256k1],,[true])
+  TEMP_CFLAGS="$CFLAGS"
+  TEMP_LIBS="$LIBS"
+  CFLAGS="$libsecp256k1_CFLAGS $CFLAGS"
+  LIBS="$libsecp256k1_LIBS $LIBS"
+  AC_CHECK_FUNCS([secp256k1_schnorrsig_sign_custom])
+  CFLAGS="$TEMP_CFLAGS"
+  LIBS="$TEMP_LIBS"
 else
   libsecp256k1_CFLAGS='-I$(srcdir)/secp256k1/include'
   libsecp256k1_LIBS='secp256k1/libsecp256k1.la'
diff -Naur a/src/key.cpp b/src/key.cpp
--- a/src/key.cpp	2021-09-08 18:16:07.000000000 +0000
+++ b/src/key.cpp	2022-02-09 04:28:35.876642987 +0000
@@ -3,6 +3,10 @@
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
+#if defined(HAVE_CONFIG_H)
+#include <config/bitcoin-config.h>
+#endif
+
 #include <key.h>
 
 #include <crypto/common.h>
@@ -274,7 +278,12 @@
         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);
         if (!secp256k1_keypair_xonly_tweak_add(GetVerifyContext(), &keypair, tweak.data())) return false;
     }
-    bool ret = secp256k1_schnorrsig_sign(secp256k1_context_sign, sig.data(), hash.data(), &keypair, secp256k1_nonce_function_bip340, aux ? (void*)aux->data() : nullptr);
+    bool ret = secp256k1_schnorrsig_sign(secp256k1_context_sign, sig.data(), hash.data(), &keypair,
+#if HAVE_SECP256K1_SCHNORRSIG_SIGN_CUSTOM
+            aux ? aux->data() : nullptr);
+#else
+            secp256k1_nonce_function_bip340, aux ? (void*)aux->data() : nullptr);
+#endif
     memory_cleanse(&keypair, sizeof(keypair));
     return ret;
 }
diff -Naur a/src/pubkey.cpp b/src/pubkey.cpp
--- a/src/pubkey.cpp	2021-09-08 18:16:07.000000000 +0000
+++ b/src/pubkey.cpp	2022-02-09 04:28:35.877642995 +0000
@@ -3,6 +3,10 @@
 // Distributed under the MIT software license, see the accompanying
 // file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
+#if defined(HAVE_CONFIG_H)
+#include <config/bitcoin-config.h>
+#endif
+
 #include <pubkey.h>
 
 #include <hash.h>
@@ -191,7 +195,11 @@
     assert(sigbytes.size() == 64);
     secp256k1_xonly_pubkey pubkey;
     if (!secp256k1_xonly_pubkey_parse(secp256k1_context_verify, &pubkey, m_keydata.data())) return false;
-    return secp256k1_schnorrsig_verify(secp256k1_context_verify, sigbytes.data(), msg.begin(), &pubkey);
+    return secp256k1_schnorrsig_verify(secp256k1_context_verify, sigbytes.data(), msg.begin(),
+#if HAVE_SECP256K1_SCHNORRSIG_SIGN_CUSTOM
+            msg.size(),
+#endif
+            &pubkey);
 }
 
 static const CHashWriter HASHER_TAPTWEAK = TaggedHash("TapTweak");
