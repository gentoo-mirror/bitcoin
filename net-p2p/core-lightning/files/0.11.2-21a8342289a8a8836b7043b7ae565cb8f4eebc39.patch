--- /var/cache/distfiles/21a8342289a8a8836b7043b7ae565cb8f4eebc39.patch	2023-02-10 15:44:59.029640259 -0500
+++ /var/tmp/portage/net-p2p/core-lightning-0.11.2-r114/temp/21a8342289a8a8836b7043b7ae565cb8f4eebc39.patch	2023-02-10 18:53:59.365266924 -0500
@@ -13,7 +13,7 @@
 index 0d34dafb3047f60f528c4a9b4d9ecbab79c1fb29..b2cb07204dab17a9c540648d937969ec299a55cd 100644
 --- a/cln-grpc/src/convert.rs
 +++ b/cln-grpc/src/convert.rs
-@@ -2318,3 +2318,1111 @@ impl From<pb::StopRequest> for requests::StopRequest {
+@@ -2304,3 +2304,1097 @@ impl From<pb::StopRequest> for requests::StopRequest {
      }
  }
  
@@ -133,16 +133,6 @@
 +}
 +
 +#[allow(unused_variables)]
-+impl From<pb::ListpeersPeersChannelsAlias> for responses::ListpeersPeersChannelsAlias {
-+    fn from(c: pb::ListpeersPeersChannelsAlias) -> Self {
-+        Self {
-+            local: c.local.map(|v| cln_rpc::primitives::ShortChannelId::from_str(&v).unwrap()), // Rule #1 for type short_channel_id?
-+            remote: c.remote.map(|v| cln_rpc::primitives::ShortChannelId::from_str(&v).unwrap()), // Rule #1 for type short_channel_id?
-+        }
-+    }
-+}
-+
-+#[allow(unused_variables)]
 +impl From<pb::ListpeersPeersChannelsHtlcs> for responses::ListpeersPeersChannelsHtlcs {
 +    fn from(c: pb::ListpeersPeersChannelsHtlcs) -> Self {
 +        Self {
@@ -198,7 +188,6 @@
 +            their_to_self_delay: c.their_to_self_delay, // Rule #1 for type u32?
 +            our_to_self_delay: c.our_to_self_delay, // Rule #1 for type u32?
 +            max_accepted_htlcs: c.max_accepted_htlcs, // Rule #1 for type u32?
-+            alias: c.alias.map(|v| v.into()),
 +state_changes: None,            status: Some(c.status.into_iter().map(|s| s.into()).collect()), // Rule #4
 +            in_payments_offered: c.in_payments_offered, // Rule #1 for type u64?
 +            in_offered_msat: c.in_offered_msat.map(|a| a.into()), // Rule #1 for type msat?
@@ -292,7 +281,6 @@
 +            amount_msat: c.amount_msat.map(|a| a.into()), // Rule #1 for type msat?
 +            destination: c.destination.map(|v| PublicKey::from_slice(&v).unwrap()), // Rule #1 for type pubkey?
 +            created_at: c.created_at, // Rule #1 for type u64
-+            completed_at: c.completed_at, // Rule #1 for type u64?
 +            amount_sent_msat: c.amount_sent_msat.unwrap().into(), // Rule #1 for type msat
 +            label: c.label, // Rule #1 for type string?
 +            partid: c.partid, // Rule #1 for type u64?
@@ -758,7 +746,6 @@
 +            amount_msat: c.amount_msat.map(|a| a.into()), // Rule #1 for type msat?
 +            destination: c.destination.map(|v| PublicKey::from_slice(&v).unwrap()), // Rule #1 for type pubkey?
 +            created_at: c.created_at, // Rule #1 for type u64
-+            completed_at: c.completed_at, // Rule #1 for type number?
 +            amount_sent_msat: c.amount_sent_msat.unwrap().into(), // Rule #1 for type msat
 +            label: c.label, // Rule #1 for type string?
 +            partid: c.partid, // Rule #1 for type u64?
@@ -1050,7 +1037,6 @@
 +            status: c.status.try_into().unwrap(),
 +            destination: c.destination.map(|v| PublicKey::from_slice(&v).unwrap()), // Rule #1 for type pubkey?
 +            created_at: c.created_at, // Rule #1 for type u64
-+            completed_at: c.completed_at, // Rule #1 for type u64?
 +            label: c.label, // Rule #1 for type string?
 +            bolt11: c.bolt11, // Rule #1 for type string?
 +            description: c.description, // Rule #1 for type string?
