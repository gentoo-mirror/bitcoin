--- /var/cache/distfiles/9c35f9c13a04ef4d6e529411c091567ca890f596.patch	2023-02-10 15:44:58.708637460 -0500
+++ /var/tmp/portage/net-p2p/core-lightning-0.11.2-r114/temp/9c35f9c13a04ef4d6e529411c091567ca890f596.patch	2023-02-10 18:51:55.444143036 -0500
@@ -15,6 +15,14 @@
 index 71b6f101fd1..0d34dafb304 100644
 --- a/cln-grpc/src/convert.rs
 +++ b/cln-grpc/src/convert.rs
+@@ -186,7 +186,6 @@ impl From<responses::ListpeersPeersChannels> for pb::ListpeersPeersChannels {
+             their_to_self_delay: c.their_to_self_delay, // Rule #2 for type u32?
+             our_to_self_delay: c.our_to_self_delay, // Rule #2 for type u32?
+             max_accepted_htlcs: c.max_accepted_htlcs, // Rule #2 for type u32?
+-            alias: c.alias.map(|v| v.into()),
+             status: c.status.map(|arr| arr.into_iter().map(|i| i.into()).collect()).unwrap_or(vec![]), // Rule #3 
+             in_payments_offered: c.in_payments_offered, // Rule #2 for type u64?
+             in_offered_msat: c.in_offered_msat.map(|f| f.into()), // Rule #2 for type msat?
 @@ -1135,6 +1135,593 @@ impl From<responses::StopResponse> for pb::StopResponse {
      }
  }
@@ -69,7 +77,7 @@
 +            bolt11: c.bolt11, // Rule #2 for type string?
 +            payment_secret: c.payment_secret.map(|v| v.to_vec()), // Rule #2 for type secret?
 +            partid: c.partid.map(|v| v.into()), // Rule #2 for type u16?
-+            localinvreqid: c.localinvreqid.map(|v| hex::decode(v).unwrap()), // Rule #2 for type hex?
++            localofferid: c.localofferid.map(|v| hex::decode(v).unwrap()), // Rule #2 for type hex?
 +            groupid: c.groupid, // Rule #2 for type u64?
 +        }
 +    }
@@ -280,7 +288,7 @@
 +            bolt11: c.bolt11, // Rule #2 for type string?
 +            amount_msat: c.amount_msat.map(|f| f.into()), // Rule #2 for type msat?
 +            destination: c.destination.map(|v| v.serialize().to_vec()), // Rule #2 for type pubkey?
-+            localinvreqid: c.localinvreqid.map(|v| v.to_vec()), // Rule #2 for type hash?
++            localofferid: c.localofferid.map(|v| v.to_vec()), // Rule #2 for type hash?
 +            groupid: c.groupid, // Rule #2 for type u64?
 +        }
 +    }
@@ -317,7 +325,7 @@
 +            retry_for: c.retry_for.map(|v| v.into()), // Rule #2 for type u16?
 +            maxdelay: c.maxdelay.map(|v| v.into()), // Rule #2 for type u16?
 +            exemptfee: c.exemptfee.map(|f| f.into()), // Rule #2 for type msat?
-+            localinvreqid: c.localinvreqid.map(|v| hex::decode(v).unwrap()), // Rule #2 for type hex?
++            localofferid: c.localofferid.map(|v| hex::decode(v).unwrap()), // Rule #2 for type hex?
 +            exclude: c.exclude.map(|arr| arr.into_iter().map(|i| i.into()).collect()).unwrap_or(vec![]), // Rule #3 
 +            maxfee: c.maxfee.map(|f| f.into()), // Rule #2 for type msat?
 +            description: c.description, // Rule #2 for type string?
