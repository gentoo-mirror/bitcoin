--- /var/cache/distfiles/fc26675336eeee5ed22590f60087af8cfc0ccc63.patch	2023-05-11 14:33:15.660098715 -0400
+++ /var/tmp/portage/net-p2p/core-lightning-0.12.1-r107/temp/fc26675336eeee5ed22590f60087af8cfc0ccc63.patch	2023-05-11 15:39:13.081429252 -0400
@@ -1010,8 +1006,8 @@
 --- a/cln-grpc/src/convert.rs
 +++ b/cln-grpc/src/convert.rs
 @@ -64,7 +64,9 @@ impl From<responses::GetinfoResponse> for pb::GetinfoResponse {
-             blockheight: c.blockheight, // Rule #2 for type u32
-             network: c.network, // Rule #2 for type string
+             #[allow(deprecated)]
+             msatoshi_fees_collected: c.msatoshi_fees_collected, // Rule #2 for type u64?
              fees_collected_msat: Some(c.fees_collected_msat.into()), // Rule #2 for type msat
 +            // Field: Getinfo.address[]
              address: c.address.into_iter().map(|i| i.into()).collect(), // Rule #3 for type GetinfoAddress
@@ -1552,7 +1548,7 @@
 @@ -1645,6 +1872,7 @@ impl From<requests::PayRequest> for pb::PayRequest {
              maxdelay: c.maxdelay.map(|v| v.into()), // Rule #2 for type u16?
              exemptfee: c.exemptfee.map(|f| f.into()), // Rule #2 for type msat?
-             localinvreqid: c.localinvreqid.map(|v| hex::decode(v).unwrap()), // Rule #2 for type hex?
+             localofferid: c.localofferid.map(|v| hex::decode(v).unwrap()), // Rule #2 for type hex?
 +            // Field: Pay.exclude
              exclude: c.exclude.map(|arr| arr.into_iter().map(|i| i.into()).collect()).unwrap_or(vec![]), // Rule #3
              maxfee: c.maxfee.map(|f| f.into()), // Rule #2 for type msat?
